/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GFile;

import javax.swing.JFileChooser;
import javax.swing.UIManager;

/**
 * Simple GUI for selecting several files.
 * @author Jacob Huesman
 */
public class UI extends javax.swing.JFrame {

    /**
     * Declare instance variables.
     */
    private final JFileChooser fc;
    private final FilePath file;
    private final Thread thread;
    
    /**
     * Creates new JFrame GetFile.
     * @param filePath object used to store file paths across multiple threads
     * @param thread this thread prevents the GFile method from continuing execution until the file selection process is complete
     */
    public UI(FilePath filePath, Thread thread) {        
        /* Set the System look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
        
        /**
         * Instantiate new JFileChooser. Add references of filePath and thread passed from the client.
         */
        fc = new JFileChooser();
        this.file = filePath;
        this.thread = thread;
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        filePath = new javax.swing.JTextField();
        findFile = new javax.swing.JButton();
        returnFile = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        filePaths = new javax.swing.JTextArea();
        add = new javax.swing.JButton();

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        filePath.setToolTipText("");

        findFile.setText("File");
        findFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findFileActionPerformed(evt);
            }
        });

        returnFile.setText("Import");
        returnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnFileActionPerformed(evt);
            }
        });

        label.setText("Enter a file path and click Add, or click File and choose the file you want to add. When done click import.");

        filePaths.setEditable(false);
        filePaths.setColumns(20);
        filePaths.setRows(5);
        jScrollPane2.setViewportView(filePaths);

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filePath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(findFile, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(returnFile, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findFile)
                    .addComponent(returnFile)
                    .addComponent(add))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Opens JFileChooser dialog and then displays and stores the path.
     * @param evt 
     */
    private void findFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findFileActionPerformed
        if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            file.addPath(fc.getSelectedFile().getAbsolutePath());
            filePaths.setText(filePaths.getText()+fc.getSelectedFile().getAbsolutePath()+"\n");
        }
    }//GEN-LAST:event_findFileActionPerformed

    /**
     * Closes the dialog.
     * @param evt 
     */
    private void returnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnFileActionPerformed
        thread.interrupt();
        this.dispose();
    }//GEN-LAST:event_returnFileActionPerformed

    /**
     * On window close notify thread to stop executing. Then dispose of this Frame's resources.
     * @param evt 
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        thread.interrupt();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * Add the file path to the list of file paths.
     * @param evt 
     */
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if(file.addPath(filePath.getText())){
            filePaths.setText(filePaths.getText()+filePath.getText()+"\n");
        } else {
            filePath.setText("Please enter a valid file path");
        }
    }//GEN-LAST:event_addActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField filePath;
    private javax.swing.JTextArea filePaths;
    private javax.swing.JButton findFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel label;
    private javax.swing.JButton returnFile;
    // End of variables declaration//GEN-END:variables
}
